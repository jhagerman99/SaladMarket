'use client'

import '../globals.css'
import React, { useState } from 'react';
import Link from 'next/link';
import { usePathname } from 'next/navigation';
import { FaBars, FaTimes } from 'react-icons/fa'; // Import icons

const Sidebar = () => {
  const [isOpen, setIsOpen] = useState(false);
  const currentPath = usePathname();

  const toggleSidebar = () => {
    setIsOpen(!isOpen);
  };

  return (
    <>
      {/* Toggle Button */}
      <button 
        className="lg:hidden fixed top-4 left-4 z-50 bg-yellow-500 p-2 rounded-full text-white" 
        onClick={toggleSidebar}
      >
        {isOpen ? <FaTimes /> : <FaBars />}
      </button>

      {/* Sidebar */}
      <div 
        className={`pt-10 fixed h-full w-64 4xl:w-80 bg-white text-center transform transition-transform duration-300 ease-in-out lg:static lg:translate-x-0 z-40 ${
          isOpen ? 'translate-x-0' : '-translate-x-full'
        }`}
      >
        <div className="p-4 flex flex-col justify-center items-center">
          <h2 className="text-3xl font-bold mb-14 text-customBlue">
            SALADMAKER<span className='text-customYellow'>.</span>
          </h2>
          <ul>
            <li className={`p-3 w-52 rounded-xl flex justify-start items-center space-x-4 ${
              currentPath === '/' ? 'bg-customYellow text-white' : 'text-customGray'
            }`}>
              <svg width="41" height="40" viewBox="0 0 41 40" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M8.83325 30.8333C8.83325 33.6967 15.3133 35 21.3333 35C27.3533 35 33.8333 33.6967 33.8333 30.8333C33.8333 28.56 29.8983 27.5333 27.0633 27.09L28.9999 25.1667C30.5151 23.6516 31.5469 21.7213 31.965 19.6198C32.3831 17.5184 32.1686 15.3401 31.3487 13.3605C30.5288 11.3809 29.1402 9.68893 27.3587 8.49851C25.5771 7.30809 23.4826 6.6727 21.3399 6.6727C19.1972 6.6727 17.1027 7.30809 15.3211 8.49851C13.5396 9.68893 12.1511 11.3809 11.3311 13.3605C10.5112 15.3401 10.2967 17.5184 10.7148 19.6198C11.1329 21.7213 12.1648 23.6516 13.6799 25.1667L15.6099 27.0967C12.7683 27.5333 8.83325 28.56 8.83325 30.8333ZM22.9999 13.3333C22.9999 13.1786 23.043 13.0269 23.1244 12.8952C23.2057 12.7636 23.3222 12.6572 23.4606 12.588C23.599 12.5188 23.754 12.4895 23.9081 12.5034C24.0622 12.5173 24.2094 12.5738 24.3333 12.6667C25.3652 13.4409 26.2221 14.4242 26.8479 15.5524C27.4737 16.6805 27.8543 17.928 27.9649 19.2133C28.0015 19.6082 27.8951 20.0031 27.6651 20.3261C27.4351 20.6491 27.0967 20.8788 26.7116 20.9733L24.6666 21.485V23.3333C24.6666 23.5544 24.5788 23.7663 24.4225 23.9226C24.2662 24.0789 24.0543 24.1667 23.8333 24.1667C23.6122 24.1667 23.4003 24.0789 23.244 23.9226C23.0877 23.7663 22.9999 23.5544 22.9999 23.3333V13.3333ZM15.4999 15V13.3333C15.4999 13.1123 15.5877 12.9004 15.744 12.7441C15.9003 12.5878 16.1122 12.5 16.3333 12.5C16.5543 12.5 16.7662 12.5878 16.9225 12.7441C17.0788 12.9004 17.1666 13.1123 17.1666 13.3333V15C17.1699 15.2874 17.2486 15.5689 17.3949 15.8164C17.5411 16.0638 17.7497 16.2685 17.9999 16.41V13.3333C17.9999 13.1123 18.0877 12.9004 18.244 12.7441C18.4003 12.5878 18.6122 12.5 18.8333 12.5C19.0543 12.5 19.2662 12.5878 19.4225 12.7441C19.5788 12.9004 19.6666 13.1123 19.6666 13.3333V16.41C19.9168 16.2685 20.1254 16.0638 20.2716 15.8164C20.4179 15.5689 20.4966 15.2874 20.4999 15V13.3333C20.4999 13.1123 20.5877 12.9004 20.744 12.7441C20.9003 12.5878 21.1122 12.5 21.3333 12.5C21.5543 12.5 21.7662 12.5878 21.9225 12.7441C22.0788 12.9004 22.1666 13.1123 22.1666 13.3333V15C22.1638 15.7369 21.917 16.452 21.4647 17.0337C21.0124 17.6154 20.38 18.0308 19.6666 18.215V23.3333C19.6666 23.5544 19.5788 23.7663 19.4225 23.9226C19.2662 24.0789 19.0543 24.1667 18.8333 24.1667C18.6122 24.1667 18.4003 24.0789 18.244 23.9226C18.0877 23.7663 17.9999 23.5544 17.9999 23.3333V18.215C17.2865 18.0308 16.6542 17.6154 16.2018 17.0337C15.7495 16.452 15.5027 15.7369 15.4999 15ZM17.0899 28.5767L19.5649 31.0533C19.7971 31.2857 20.0728 31.47 20.3762 31.5957C20.6796 31.7214 21.0048 31.7861 21.3333 31.7861C21.6617 31.7861 21.9869 31.7214 22.2903 31.5957C22.5937 31.47 22.8694 31.2857 23.1016 31.0533L25.5766 28.5767C30.1566 29.1067 32.1666 30.3133 32.1666 30.8333C32.1666 31.58 28.4816 33.3333 21.3333 33.3333C14.1849 33.3333 10.4999 31.58 10.4999 30.8333C10.4999 30.3133 12.5099 29.1067 17.0899 28.5767Z" 
                fill={`${currentPath === '/' ? 'white' : '#A098AE'}`}/>
              </svg>
              <Link href="/">Salad maker</Link>
            </li>
            <li className={`p-3 w-52 rounded-xl flex justify-start items-center space-x-4 ${
              currentPath === '/recipe' ? 'bg-customYellow text-white' : 'text-customGray'
            }`}>
              <svg width="41" height="40" viewBox="0 0 41 40" fill="" xmlns="http://www.w3.org/2000/svg">
                <path fill-rule="evenodd" clip-rule="evenodd" d="M10.3949 6.98926C10.82 6.57382 11.4147 6.30289 12.5401 6.15561C13.6989 6.00278 15.2328 6 17.4336 6H23.5664C25.7673 6 27.3012 6.00278 28.4599 6.15561C29.5853 6.30289 30.18 6.57382 30.6052 6.98926C31.0289 7.40608 31.3054 7.98963 31.4569 9.09143C31.6125 10.2266 31.6153 11.7299 31.6153 13.8849V24.7764H14.0337C12.7791 24.7764 11.9232 24.7751 11.1896 24.9682C10.5338 25.1405 9.92524 25.4211 9.38477 25.7907V13.8863C9.38477 11.7299 9.38754 10.2266 9.54316 9.09143C9.6946 7.98963 9.9711 7.40608 10.3949 6.98926ZM14.3686 11.2575C14.0669 11.2545 13.7763 11.3714 13.5607 11.5824C13.345 11.7933 13.2218 12.0812 13.2181 12.3829C13.2181 13.0054 13.7322 13.5097 14.3672 13.5097H26.6329C26.9343 13.5123 27.2245 13.3954 27.4399 13.1844C27.6552 12.9735 27.7782 12.6858 27.7819 12.3843C27.7786 12.0826 27.6558 11.7946 27.4404 11.5833C27.225 11.3721 26.9345 11.2549 26.6329 11.2575H14.3686ZM13.2181 17.6404C13.2181 17.0194 13.7322 16.515 14.3672 16.515H22.0325C22.3342 16.5121 22.6248 16.6289 22.8404 16.8399C23.0561 17.0508 23.1793 17.3388 23.183 17.6404C23.1797 17.9424 23.0566 18.2306 22.8409 18.4419C22.6252 18.6532 22.3345 18.7702 22.0325 18.7673H14.3672C14.0657 18.7699 13.7755 18.6529 13.5602 18.4419C13.3448 18.231 13.2218 17.9419 13.2181 17.6404Z" 
                fill={`${currentPath === '/recipe' ? 'white' : '#A098AE'}`}/>
                <path d="M14.1894 27.2405C12.6902 27.2405 12.1664 27.2502 11.7635 27.3558C11.2268 27.4945 10.7319 27.7614 10.3212 28.1337C9.91049 28.5059 9.59631 28.9723 9.40564 29.4927C9.42787 30.0235 9.46538 30.4917 9.52235 30.9085C9.67379 32.0103 9.95029 32.5939 10.3741 33.0107C10.7992 33.4261 11.3939 33.6971 12.5193 33.8443C13.6781 33.9972 15.212 33.9999 17.4128 33.9999H23.5456C25.7464 33.9999 27.2804 33.9972 28.4391 33.8457C29.5645 33.697 30.1592 33.4261 30.5844 33.0107C30.8845 32.7147 31.1123 32.3354 31.2721 31.7463H14.3464C14.0449 31.7489 13.7547 31.6319 13.5394 31.421C13.324 31.21 13.201 30.9223 13.1973 30.6209C13.1973 29.9985 13.7114 29.4941 14.3464 29.4941H31.5528C31.5806 28.8466 31.5903 28.1047 31.5945 27.2405H14.1894Z" 
                fill={`${currentPath === '/recipe' ? 'white' : '#A098AE'}`}/>
              </svg>
              <Link href="/recipe">Recipe</Link>
            </li>
          </ul>
        </div>
      </div>
    </>
  );
};

export default Sidebar;
